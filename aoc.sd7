$ include "seed7_05.s7i";
  include "aoc.s7i";


# Day01
const proc: day01_01 is func
	local  
		var array string: lines is 0 times "";
		var string: line is "";
		var integer: elf_with_most_calories is 0;
		var integer: temp_elf is 0;
	begin
		lines := read_file("day01/input.txt");
		for line range lines do
			if (line <> "") then
				temp_elf +:= integer(line);
			elsif temp_elf > elf_with_most_calories then
				elf_with_most_calories := temp_elf;
				temp_elf := 0;
			else
				temp_elf := 0;
			end if;
		end for;
		writeln("day01_01: " <& string(elf_with_most_calories));
	end func;
	
const proc: day01_02 is func
	local
		var integer: temp_elf is 0;
		var string: line is "";
		var array string: lines is 0 times "";
		var integer: one_elf is 0;
		var integer: two_elf is 0;
		var integer: three_elf is 0;
	begin
		lines := read_file("day01/input.txt");
		for line range lines do
			if (line <> "") then
				temp_elf +:= integer(line);
			elsif temp_elf > one_elf then
				three_elf := two_elf;
				two_elf := one_elf;
				one_elf := temp_elf;
				temp_elf := 0;
			elsif temp_elf > two_elf then
				three_elf := two_elf;
				two_elf := temp_elf;
				temp_elf := 0;
			elsif temp_elf > three_elf then
				three_elf := temp_elf;
				temp_elf := 0;
			else
				temp_elf := 0;
			end if;
		end for;
		writeln("day01_02: " <& string(one_elf + two_elf + three_elf));
	end func;
	
# Day 02
const func integer: calc_outcome (in char: opponent_turn, in char: my_turn) is func
	result
		var integer: outcome is 0;
	begin
		# handle my_turn
		if (my_turn = 'X') then
			outcome +:= 1;
		elsif (my_turn = 'Y') then
			outcome +:= 2;
		else
			outcome +:= 3;
		end if;
			
		# handle opponent_turn
		if (opponent_turn = 'A') then
			if (my_turn = 'X') then
				outcome +:= 3; # Draw
			elsif (my_turn = 'Y') then
				outcome +:= 6; # Win
			end if;
		elsif (opponent_turn = 'B') then
			if (my_turn = 'Y') then
				outcome +:= 3; # Draw
			elsif (my_turn = 'Z') then
				outcome +:= 6; # Win
			end if;
		else
			if (my_turn = 'Z') then
				outcome +:= 3; # Draw
			elsif (my_turn = 'X') then
				outcome +:= 6; # Win
			end if;
		end if;
	end func;
	
const proc: day02_01 is func
	local
		var string: line is "";
		var array string: lines is 0 times "";
		var string: sub_line is "";
		var char: opponent_turn is ' ';
		var char: my_turn is ' ';
		var integer: total_count is 0;
	begin
		lines := read_file("day02/input.txt");
		for line range lines do
			if (line <> "") then
				opponent_turn := line[1];
				my_turn := line[3];
				total_count +:= calc_outcome(opponent_turn, my_turn);
			end if;
		end for;
		writeln("day02_01: " <& total_count);
	end func;

const proc: day02_02 is func
	local
		var string: line is "";
		var array string: lines is 0 times "";
		var char: opponent_turn is ' ';
		var char: my_turn is ' ';
		var integer: total_count is 0;
	begin
		lines := read_file("day02/input.txt");
		for line range lines do
			if (line <> "") then
				opponent_turn := line[1];
				my_turn := line[3];
				if (my_turn = 'X') then
					# LOSE
					if (opponent_turn = 'A') then
						my_turn := 'Z' # A (Rock) so we want Z (Scissors)
					elsif (opponent_turn = 'C') then
						my_turn := 'Y' # C (Scissors) so we want Y (Paper)
					end if;
				elsif (my_turn = 'Y') then
					# DRAW
					if (opponent_turn = 'A') then
						my_turn := 'X' # A (Rock) so we want X (Rock)
					elsif (opponent_turn = 'C') then
						my_turn := 'Z' # C (Scissors) so we want Z (Scissors)
					end if;
				else
					# WIN
					if (opponent_turn = 'A') then
						my_turn := 'Y' # A (Rock) so we want Y (Paper)
					elsif (opponent_turn = 'C') then
						my_turn := 'X' # C (Scissors) so we want X (Rock)
					end if;
				end if;
				total_count +:= calc_outcome(opponent_turn, my_turn);				
			end if;
		end for;
		writeln("day02_02: " <& total_count);
	end func;
	
const func integer: calc_char_val (in char: c) is func
	result
		var integer: value is 0;
	begin
		# if a-z 1-26
		# if A-Z 27-52
		if (ord(c) > 96) then
			value := ord(c) - 96;
		else
			value := ord(c) - 38;
		end if;
	end func;

# Day 03
const proc: day03_01 is func
	local
		var string: line is "";
		var array string: lines is 0 times "";
		var string: first_half is "";
		var string: second_half is "";
		var integer: line_length is 0;
		var char: matching_char is ' ';
		var char: c is ' ';
		var integer: total is 0;
	begin
		lines := read_file("day03/input.txt");
		for line range lines do
			if (line <> "") then
				line_length := length(line);
				first_half := line[1 len (line_length div 2)];
				second_half := line[((line_length + 2) div 2) len line_length];
				for c range first_half do
					if (rpos(second_half, c) > 0) then
						matching_char := c;
					end if;
				end for;
				total := total + calc_char_val(matching_char);
			end if;
		end for;
		writeln("day03_01: " <& total);
	end func;
	
const proc: day03_02 is func
local
	var integer: group_count is 1;
	var string: line is "";
	var array string: lines is 0 times "";
	var string: first_group is "";
	var string: second_group is "";
	var string: third_group is "";
	var char: matching_char is ' ';
	var char: c is ' ';
	var integer: total is 0;
begin
	lines := read_file("day03/input.txt");
	for line range lines do
		if (line <> "") then
			if (group_count = 1) then
				first_group := line;
				group_count := 2;
			elsif (group_count = 2) then
				second_group := line;
				group_count := 3;
			else
				third_group := line;
				# calc
				for c range first_group do
					if ((rpos(second_group, c) > 0 ) and (rpos(third_group, c) > 0)) then
						matching_char := c;
					end if;
				end for;
				group_count := 1;
				total := total + calc_char_val(matching_char);
			end if;
		end if;
	end for;
	writeln("day03_02: " <& total);
end func;
	
# Main function to call the day/part functions
const proc: main is func
	begin
		# Day 01
		writeln("");
		writeln("DAY 01");
		day01_01();
		day01_02();

		# Day 02
		writeln("");
		writeln("DAY 02");
		day02_01();
		day02_02();
		
		# Day 03
		writeln("");
		writeln("DAY 03");
		day03_01();
		day03_02();
	end func;	